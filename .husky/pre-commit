#!/usr/bin/env bash
set -euo pipefail

echo "üîç Pre-commit checks iniciando..."

# 1) Evitar nombres legacy de funciones
if git diff --cached -U0 | grep -E 'assistant(Query|DataLookup)Function' -q; then
  echo "‚ùå No uses sufijos *Function. Usa: assistantQuery / assistantDataLookup."
  echo "   Archivos afectados:"
  git diff --cached -U0 | grep -E 'assistant(Query|DataLookup)Function' -B 2 -A 2
  exit 1
fi

# 2) Evitar curls con ProjectID incorrecto
if git diff --cached -U0 | grep -E 'aiduxcare-stt-2025' -q; then
  echo "‚ùå Project ID incorrecto en comandos. Usa: aiduxcare-v2-uat-dev."
  echo "   Archivos afectados:"
  git diff --cached -U0 | grep -E 'aiduxcare-stt-2025' -B 2 -A 2
  exit 1
fi

# 3) Verificar que firebase.json use source: "functions"
if git diff --cached -U0 | grep -A 5 -B 5 'firebase.json' | grep -E 'source.*aiduxcare-v2-uat-dev' -q; then
  echo "‚ùå firebase.json debe usar source: 'functions', no source: 'aiduxcare-v2-uat-dev'."
  exit 1
fi

# 4) Verificar que no se duplique el codebase
if git diff --cached -U0 | grep -E 'mkdir.*aiduxcare.*functions' -q; then
  echo "‚ùå No crees codebases duplicados. Usa solo functions/."
  exit 1
fi

echo "‚úÖ Pre-commit checks OK - Naming can√≥nico y estructura limpia"
