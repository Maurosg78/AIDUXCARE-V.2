# Forzar ejecuci√≥n: actualizaci√≥n 2025-07-16
#
# Workflow enterprise: integraci√≥n Firestore, emulador, tests autom√°ticos y compliance hospitalario.
# Cada bloque est√° documentado para auditor√≠a y reproducibilidad.

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      # Variables de Firebase (requeridas)
      VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
      VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      # Variables de Supabase (legacy - para compatibilidad temporal)
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      # Clona el repositorio y asegura contexto limpio

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
      # Node 18 para m√°xima compatibilidad

    - name: Print Environment Status (debug)
      run: |
        echo "üîç Verificando variables de entorno..."
        echo "VITE_FIREBASE_PROJECT_ID: ${VITE_FIREBASE_PROJECT_ID:-'NO CONFIGURADA'}"
        echo "VITE_FIREBASE_API_KEY: ${VITE_FIREBASE_API_KEY:-'NO CONFIGURADA'}"
        echo "VITE_FIREBASE_APP_ID: ${VITE_FIREBASE_APP_ID:-'NO CONFIGURADA'}"
      # Debug de variables cr√≠ticas para reproducibilidad

    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      # Instala dependencias exactas para entorno controlado

    - name: Create .env.local (Migration Mode)
      run: |
        echo "üîß MODO MIGRACI√ìN: Creando .env.local con valores temporales"
        echo "VITE_FIREBASE_API_KEY=mock-firebase-api-key" >> .env.local
        echo "VITE_FIREBASE_PROJECT_ID=mock-firebase-project" >> .env.local
        echo "VITE_FIREBASE_APP_ID=mock-firebase-app-id" >> .env.local
        echo "VITE_SUPABASE_URL=mock-supabase-url" >> .env.local
        echo "VITE_SUPABASE_ANON_KEY=mock-supabase-key" >> .env.local
        echo "‚úÖ .env.local creado con valores temporales para CI/CD"
      # Variables mock para evitar exposici√≥n de datos reales

    - name: Instalar Firebase CLI y arrancar emulador Firestore
      run: |
        sudo apt-get update && sudo apt-get install -y default-jre
        npm install -g firebase-tools
        mkdir -p emulator-data
        export PATH="$(npm bin -g):$PATH"
        firebase --version
        firebase emulators:start --only firestore --project aiduxcare-mvp-uat --import=./emulator-data --export-on-exit=./emulator-data --debug > /tmp/emulator.log 2>&1 &
        sleep 10
      # Instala Java y Firebase CLI, arranca emulador en modo robusto y seguro

    - name: Esperar a que el emulador est√© listo (localhost y 127.0.0.1)
      run: |
        npx wait-on tcp:127.0.0.1:8080 --timeout 120000 || npx wait-on tcp:localhost:8080 --timeout 120000
      # Espera activa en ambos endpoints para m√°xima compatibilidad CI/CD

    - name: Run Firestore Integration Tests (Emulator)
      run: |
        npx vitest run src/core/dataSources/__tests__/patientDataSourceFirestore.test.ts
        npx vitest run src/core/dataSources/__tests__/visitDataSourceFirestore.test.ts
        cat /tmp/emulator.log
      # Ejecuta tests de integraci√≥n Firestore y muestra log para auditor√≠a

    - name: Mostrar log del emulador Firestore si falla
      if: failure()
      run: cat /tmp/emulator.log || echo "No se pudo leer el log"
      # Log completo disponible ante cualquier error

    # - name: Ejecutar tests
    #   run: npm run test

    # - name: Lint
    #   run: npm run lint

    # - name: Build & Type-check (Migration Mode)
    #   run: |
    #     echo "üîß MODO MIGRACI√ìN: Usando configuraci√≥n TypeScript temporal"
    #     npm run build:migration

    # - name: Run unit tests
    #   run: npm test

    - name: Stop Firestore Emulator
      run: pkill -f "firebase emulators:start"
      # Limpieza profesional del entorno
