name: SoT Guardian
on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  ack:
    name: Require SoT ACK
    runs-on: ubuntu-latest
    steps:
      - name: Check PR body has ACK for SoT v1.0.0
        run: |
          BODY="${{ github.event.pull_request.body }}"
          echo "$BODY" | grep -q "ACK: SOT v1.0.0" || {
            echo "::error::PR body must contain 'ACK: SOT v1.0.0'";
            exit 1;
          }

  lock:
    name: Guard SoT-controlled files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Export live PR body to env
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          BODY=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} -q .body)
          {
            echo "BODY<<__PR_BODY__"
            printf "%s\n" "$BODY"
            echo "__PR_BODY__"
          } >> "$GITHUB_ENV"
        with:
          fetch-depth: 0
      - name: Block edits to SoT without explicit approval
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.sha }}

        run: |
          CHANGED=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA")
          if echo "$CHANGED" | grep -E '^(docs/north/|eslint\.config\.js|\.husky/pre-push|package\.json)'; then
            echo "Detected SoT-controlled file changes:"
            echo "$CHANGED" | grep -E '^(docs/north/|eslint\.config\.js|\.husky/pre-push|package\.json)' || true
            echo "$BODY" | grep -q "SOT_CHANGE_OK" || {
              echo "::error::Changes to SoT-controlled files require 'SOT_CHANGE_OK' in PR body and version bump in SOURCE_OF_TRUTH.md";
              exit 1;
            }
          fi
