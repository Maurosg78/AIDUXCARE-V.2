#!/bin/bash

echo "üîß AUTO-REPARACI√ìN GIT - AiDuxCare V.2"
echo "=========================================="

# 1. DETECCI√ìN
echo "üîç Verificando estado del repositorio..."

# Verificar si estamos en un repositorio Git
if [ ! -d ".git" ]; then
    echo "‚ùå Error: No est√°s en un repositorio Git"
    exit 1
fi

# Verificar locks
LOCKS_FOUND=false
if [ -f ".git/index.lock" ] || [ -f ".git/index*.lock" ] || [ -f ".git/gc*.pid" ]; then
    echo "‚ö†Ô∏è  Locks detectados - procediendo a eliminaci√≥n..."
    LOCKS_FOUND=true
fi

# Verificar si .git/index est√° ausente o corrupto
INDEX_CORRUPT=false
if [ ! -f ".git/index" ] || [ ! -s ".git/index" ]; then
    echo "‚ö†Ô∏è  .git/index ausente o corrupto - procediendo a restauraci√≥n..."
    INDEX_CORRUPT=true
fi

# Verificar si git status se cuelga
echo "‚è±Ô∏è  Verificando respuesta de git status..."
if timeout 5s git status --porcelain > /dev/null 2>&1; then
    echo "‚úÖ git status responde correctamente"
else
    echo "‚ö†Ô∏è  git status se cuelga - procediendo a reparaci√≥n..."
    INDEX_CORRUPT=true
fi

# 2. REPARACI√ìN AUTOM√ÅTICA
if [ "$LOCKS_FOUND" = true ] || [ "$INDEX_CORRUPT" = true ]; then
    echo "üõ†Ô∏è  Iniciando reparaci√≥n autom√°tica..."
    
    # Eliminar locks
    if [ "$LOCKS_FOUND" = true ]; then
        echo "üóëÔ∏è  Eliminando locks..."
        rm -f .git/index.lock .git/index*.lock .git/gc*.pid
        echo "‚úÖ Locks eliminados"
    fi
    
    # Restaurar .git/index
    if [ "$INDEX_CORRUPT" = true ]; then
        echo "üîÑ Restaurando .git/index..."
        if git read-tree HEAD; then
            echo "‚úÖ .git/index restaurado exitosamente"
        else
            echo "‚ùå Error al restaurar .git/index"
            exit 1
        fi
    fi
else
    echo "‚úÖ No se detectaron problemas - repositorio saludable"
fi

# 3. VERIFICACI√ìN
echo "üîç Verificando reparaci√≥n..."

# Verificar que git status responde en menos de 2 segundos
if timeout 2s git status --porcelain > /dev/null 2>&1; then
    # Contar archivos pendientes
    FILE_COUNT=$(git status --porcelain | wc -l)
    echo "‚úÖ Git reparado y funcional. Archivos pendientes: $FILE_COUNT"
    
    # Verificaci√≥n final con time
    echo "‚è±Ô∏è  Verificaci√≥n final de rendimiento..."
    if timeout 2s bash -c "time git status --porcelain | wc -l" > /dev/null 2>&1; then
        echo "‚úÖ Confirmo que Git qued√≥ 100% reparado y funcional"
        exit 0
    else
        echo "‚ùå Verificaci√≥n final fall√≥"
        exit 1
    fi
else
    echo "‚ùå No se pudo reparar autom√°ticamente. Revisi√≥n manual necesaria."
    exit 1
fi
