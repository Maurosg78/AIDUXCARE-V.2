{
  "name": "aiduxcare-v2",
  "private": true,
  "version": "0.1.0",
  "type": "module",
  "engines": {
    "node": ">=20.19 <21"
  },
  "scripts": {
    "debug:mcp": "tsx src/core/mcp/debugMCP.ts",
    "dev": "npm run check:env && vite",
    "build": "vite build",
    "build:ci": "npm run check:env && tsc && vite build --config vite.config.ci.ts",
    "build:migration": "npm run check:env && tsc --project tsconfig.migration.json && vite build",
    "lint:prod": "eslint \"src/**/*.{ts,tsx}\" --report-unused-disable-directives --max-warnings 0",
    "lint": "eslint .",
    "lint:fix": "eslint \"src/**/*.{ts,tsx}\" --fix --fix-type layout,suggestion",
    "typecheck": "echo '⏭️ typecheck saltado temporalmente'",
    "preview": "vite preview",
    "test": "vitest",
    "test:unit": "vitest run --passWithNoTests",
    "test:run": "vitest run",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:e2e": "playwright test --project=chromium",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:command-centre": "playwright test tests/e2e/command-centre.spec.ts",
    "test:e2e:happy-path": "playwright test tests/e2e/command-centre.spec.ts --grep 'happy path'",
    "test:e2e:local": "npm run emulators:start && npm run dev:test & sleep 10 && npm run test:e2e:command-centre && npm run emulators:stop",
    "test:e2e:full": "npm run emulators:start && npm run dev:test & sleep 15 && npm run test:e2e && npm run emulators:stop",
    "emulators:start": "firebase emulators:start --only auth,firestore,functions --project aiduxcare-v2-uat-dev --import=./emulator-data --export-on-exit=./emulator-data",
    "emulators:stop": "pkill -f 'firebase emulators' || true",
    "dev:test": "cp .env.test.local .env.local && vite --port 5174",
    "verify:deploy": "npm run lint --max-warnings 0 && npm run type-check && npm run build && npm run test:e2e:command-centre",
    "verify:functions": "cd functions && npm ci && npm run build && cd ..",
    "verify:all": "npm run verify:deploy && npm run verify:functions",
    "script:createCase": "tsx scripts/createClinicalCase.ts",
    "script:createSecondVisit": "tsx scripts/createSecondVisitAndrea.ts",
    "test:rag": "tsx scripts/test-rag-pubmed.ts",
    "demo:rag": "tsx scripts/test-rag-pubmed.ts",
    "rag:pubmed": "tsx scripts/test-rag-pubmed.ts",
    "format": "prettier --write \"src/**/*.{ts,tsx}\"",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "createSimplifiedPatient": "ts-node ./scripts/createPatientSimplified.js",
    "createClinicalCase": "ts-node ./scripts/createClinicalCase.ts",
    "createSecondVisitAndrea": "ts-node ./scripts/createSecondVisitAndrea.ts",
    "migrate:metrics": "node ./scripts/run_metrics_migration.js",
    "generate:metrics": "node ./scripts/generateAndreaMetrics.js",
    "migrate:and:generate": "node ./scripts/run_metrics_migration.js --generate-andrea-metrics",
    "check:env": "tsx scripts/check-env.ts",
    "vercel-build": "npm run check:env && tsc && vite build",
    "start": "vite preview",
    "test:ollama": "tsx scripts/test-ollama-nlp.ts",
    "test:nlp-rag": "tsx scripts/test-nlp-rag-integration.ts",
    "demo:integration": "tsx scripts/test-nlp-rag-integration.ts",
    "test:rag-solo": "tsx scripts/test-rag-solo.ts",
    "demo:rag-solo": "tsx scripts/test-rag-solo.ts",
    "test:backend-blueprint": "tsx scripts/test-backend-blueprint.ts",
    "test:backend-blueprint:bash": "bash scripts/run-backend-blueprint-test.sh",
    "analyze": "node scripts/analyze-bundle.cjs",
    "emulator:firestore": "firebase emulators:start --only firestore --project test-project",
    "switch-env": "node scripts/switch-env.cjs",
    "switch-env:uat": "node scripts/switch-env.cjs uat",
    "switch-env:prod": "node scripts/switch-env.cjs prod",
    "switch-env:status": "node scripts/switch-env.cjs status",
    "fhir:contracts": "vitest --run src/core/fhir/__tests__/contracts.public-api.test.ts",
    "fhir:profiles": "vitest --run src/core/fhir/__tests__/validators.test.ts",
    "fhir:adapters": "vitest --run src/core/fhir/__tests__/adapters.integration.test.ts",
    "fhir:all": "npm run fhir:contracts && npm run fhir:profiles && npm run fhir:adapters",
    "prepare": "husky install",
    "smoke:uat": "node scripts/identitytoolkit-smoke.cjs UAT | tee reports/smoke-uat.txt",
    "smoke:prod": "node scripts/identitytoolkit-smoke.cjs PROD | tee reports/smoke-prod.txt",
    "check:uat": "export $(grep -v \"^#\" .env.local | xargs) && node scripts/identitytoolkit-smoke.cjs UAT",
    "check:prod": "export VITE_FIREBASE_API_KEY=\"<NUEVA_KEY_PROD>\" && node scripts/identitytoolkit-smoke.cjs PROD",
    "postinstall": "playwright install",
    "clean": "rimraf node_modules/.vite",
    "clean:all": "npm run clean && rm -rf node_modules package-lock.json && npm install",
    "test:unit:fast": "vitest run --passWithNoTests --exclude \"tests/e2e/**\"",
    "compliance:check": "echo '1) Roadmap:' && test -f docs/ROADMAP_UNICA_FUENTE_DE_VERDAD.md && echo OK || (echo FALTA && exit 1); echo '2) Checklist PR:' && test -f docs/blueprints/SECURITY_COMPLIANCE_CHECKLIST.md && echo OK || (echo FALTA && exit 1); echo '3) Imports prohibidos:' && ! grep -R '@/_deprecated\\|@/z_trash' src --include='*.ts' --include='*.tsx' 2>/dev/null && echo OK || (echo ENCONTRADOS && exit 1)",
    "test:ci": "VITE_FEATURE_PROGRESS_NOTES=1 AIDUX_ENABLE_FIREBASE=0 AIDUX_USE_EMULATORS=1 firebase emulators:exec --only \"firestore,auth\" --project demo-notesrepo \"pnpm vitest run --reporter=verbose --reporter=junit --outputFile junit.xml\"",
    "typecheck:app": "tsc --noEmit -p tsconfig.app.json",
    "lint:local": "eslint \"src/**/*.{ts,tsx}\" --config eslint.local.config.mjs --cache --cache-location .eslintcache",
    "lint:local:fix": "eslint \"src/**/*.{ts,tsx}\" --config eslint.local.config.mjs --fix --fix-type layout,suggestion --cache --cache-location .eslintcache",
    "lint:relaxed": "eslint --config eslint.override.config.js 'src/**/*.{ts,tsx}' --quiet",
    "lint:count": "eslint --config eslint.override.config.js 'src/**/*.{ts,tsx}' --format unix | cut -d: -f1 | sort | uniq -c | sort -nr | head -n 20",
    "test:persistence": "vitest --run test/persistence/notesRepo.spec.ts",
    "rules:deploy": "firebase deploy --only firestore:rules",
    "indexes:deploy": "firebase firestore:indexes:create firestore.indexes.json || firebase deploy --only firestore:indexes",
    "pretest:ci": "node --no-warnings scripts/kill-ports.cjs || true",
    "check:no-soap-logs": "scripts/check-no-soap-logs.sh",
    "pretest": "pnpm run check:no-soap-logs"
  },
  "dependencies": {
    "@headlessui/react": "^1.7.19",
    "@heroicons/react": "2.1.5",
    "@supabase/supabase-js": "^2.49.8",
    "@tanstack/react-virtual": "^3.1.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cross-fetch": "^4.1.0",
    "date-fns": "^4.1.0",
    "date-fns-tz": "^3.2.0",
    "firebase": "^12.1.0",
    "google-auth-library": "^10.3.0",
    "idb": "^8.0.3",
    "lucide-react": "^0.542.0",
    "node-fetch": "^3.3.2",
    "node-releases": "^2.0.19",
    "openai": "^5.15.0",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "react-router": "^6.30.1",
    "react-router-dom": "^6.30.1",
    "sucrase": "^3.35.0",
    "tailwind-merge": "^3.3.1",
    "use-sync-external-store": "^1.5.0",
    "uuid": "^11.1.0",
    "zustand": "^5.0.7"
  },
  "devDependencies": {
    "@babel/core": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@babel/traverse": "^7.28.3",
    "@babel/types": "^7.27.1",
    "@firebase/rules-unit-testing": "^5.0.0",
    "@playwright/test": "^1.54.2",
    "@storybook/react": "^8.6.14",
    "@storybook/types": "^8.6.14",
    "@testing-library/jest-dom": "^6.9.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jsdom": "^21.1.7",
    "@types/node": "^20.19.18",
    "@types/react": "^18.3.24",
    "@types/react-dom": "^18.3.7",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.40.0",
    "@typescript-eslint/parser": "^8.40.0",
    "@vitejs/plugin-react": "^5.0.1",
    "@vitejs/plugin-react-swc": "^3.11.0",
    "@vitest/coverage-v8": "^1.6.1",
    "@vitest/ui": "^1.6.1",
    "autoprefixer": "^10.4.20",
    "chalk": "^4.1.2",
    "color-name": "^2.0.0",
    "concurrently": "^9.2.0",
    "cross-spawn": "^7.0.3",
    "dotenv": "^17.2.1",
    "esbuild": "^0.25.9",
    "eslint": "^8.57.1",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-react-refresh": "^0.4.5",
    "firebase-admin": "^13.4.0",
    "happy-dom": "^18.0.1",
    "husky": "^9.1.7",
    "jsdom": "^26.1.0",
    "magic-string": "^0.30.17",
    "pathe": "^1.1.2",
    "postcss": "^8.4.47",
    "rollup-plugin-visualizer": "^6.0.3",
    "tailwindcss": "^3.4.14",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.1",
    "typescript": "^5.6.3",
    "vite": "^5.4.11",
    "vite-tsconfig-paths": "^4.2.1",
    "vitest": "^1.6.1",
    "wait-on": "^8.0.3",
    "web-vitals": "^5.0.2",
    "zod": "^4.0.5"
  }
}
